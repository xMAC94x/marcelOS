--[[
THANKS to Ian
http://www.rtsoft.com/forums/showthread.php?1466-A-cleaner-easier-class-idiom-in-Lua
]]

function class(superclass, name)
    local cls = superclass and superclass() or {}
    cls.__name = name or ""
    cls.__super = superclass
	cls.__index = cls
    return setmetatable(cls, 
	  {
	  __call = function (c, ...)
      local instance = setmetatable({__class = cls}, cls)
      if cls.__init then
         cls.__init(instance, ...)
         end
      return instance
      end
	  }
	)
end

--[[

function class()
    local cls = {}
    cls.__index = cls
    return setmetatable(cls, 
	  {
	  __call = function (c, ...)
      local instance = setmetatable({}, cls)
      if cls.__init then
         cls.__init(instance, ...)
         end
      return instance
      end
	  }
	)
end
]]

function issubclass(class1, class2)
if (type(class1) ~= "table") or (type(class2) ~= "table") then
	return false
	end
while true do
    if class1 == class2 then
        return true
        end
    class2 = class2.__super
    if not class2 then
        break
		end
    end
return false
end

function isinstance(inst, cls)
return (type(inst) == "table") and issubclass(inst.__class, cls)
end
